predictors = ["temp","Promo", "Assortment", "CompetitionDistance", "StoreType", "Promo2", "Open"];

n_estimators=200
max_features=0.4
min_samples_split=10
min_samples_leaf=5
r2 score=0.556766721235

n_estimators=300
max_features=0.4
min_samples_split=10
min_samples_leaf=5
r2score=0.571098022446

n_estimators=500
max_features=0.6
min_samples_split=10
min_samples_leaf=50
n_jobs=-1
random_state=1
r2 score=0.725220064911

n_estimators=500
max_features=0.6
min_samples_split=10
min_samples_leaf=70
n_jobs=-1
random_state=1
r2 score=0.763527343258

n_estimators=500
max_features=0.6
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.77808829268

n_estimators=500
max_features=0.8
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.718130904272

n_estimators=500
max_features=0.5
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.810712271196

n_estimators=500
max_features=0.4
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.826915410245

n_estimators=500
max_features=0.3
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.826915410245 (significant to mention that there is no improvement if max_features is changed from 0.4 to 0.3). 

n_estimators=500
max_features=0.2 
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.836928651055

n_estimators=1000
max_features=0.2 
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.837697040394

n_estimators=1500
max_features=0.2 
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.836352763284 (This is a decrease in accuracy with the increase in the number of tress by 500: important to note)

n_estimators=1250
max_features=0.2 
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.83619045328 (Again it is lesser than the accuracy generated by 1000 trees and 1500 trees. 1000 performs better so far).

n_estimators=750
max_features=0.2 
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.838371946043 (This is an increase as compared to 1000 trees).

n_estimators=700
max_features=0.2 
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.838322657426 (Not better than 750)

n_estimators=800
max_features=0.2 
min_samples_split=10
min_samples_leaf=100
n_jobs=-1
random_state=1
r2 score=0.838194480508 (Not better than 750)

THUS 750 trees proves to be the rounded optimum. 

n_estimators=750
max_features=0.2 
min_samples_split=10
min_samples_leaf=150
n_jobs=-1
random_state=1
r2 score=0.816446062079 (min_samples_leaf from 100 to 150 decreases our accuracy). 

n_estimators=750
max_features=0.2 
min_samples_split=10
min_samples_leaf=150
n_jobs=-1
random_state=1
r2 score=0.830131863143 (Greater than that of 150 leaves but lesser than 100 leaves). 

THUS 100 leaves proves to be the rounded optimum.

n_estimators=750
max_features=0.2 
min_samples_split=20
min_samples_leaf=150
n_jobs=-1
random_state=1
r2 score= 0.838371946043 (same as min_sample_split=10)

Accuracy seems to be same when the min_samples_split is increased till 100. 
--------------------------------------------------------------------------------------------------------
predictors = ["DaysSinceLastPromo2","DaysSinceCompetition","Promo", "Assortment", "CompetitionDistance", "StoreType", "Promo2", "Open"];

n_estimators=750
max_features=0.2
min_samples_split=10
min_samples_leaf=20
n_jobs=-1
random_state=1
r2 score
0.870446807763

n_estimators=1000
max_features=0.2
min_samples_split=10
min_samples_leaf=20
n_jobs=-1
random_state=1
r2 score
0.870446807763

n_estimators=1000
max_features=0.2
min_samples_split=10
min_samples_leaf=40
n_jobs=-1
random_state=1
r2 score
0.881824789477


--------------------------------------------------------------------
Sorted values ; Test data = 4% train data = 96%

1000
0.6
2
100
-1
1
r2 score
0.837894275802

1000
0.6
2
70
-1
1
r2 score
0.846972374739
